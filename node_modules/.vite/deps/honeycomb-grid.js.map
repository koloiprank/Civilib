{
  "version": 3,
  "sources": ["../../honeycomb-grid/dist/honeycomb-grid.mjs"],
  "sourcesContent": ["const l = (r) => Number.isFinite(r) && !Number.isNaN(r), p = (r) => typeof r == \"object\" && r !== null, wt = (r) => p(r) && l(r.q) && l(r.r), V = (r) => typeof r == \"function\", S = (r) => p(r) && l(r.col) && l(r.row), Z = (r) => p(r) && l(r.x) && l(r.y), H = (r) => Array.isArray(r) && l(r[0]) && l(r[1]), P = (r, t) => t + r * (t & 1) >> 1;\nfunction X(r, t) {\n  return (r % t + t) % t;\n}\nconst D = (r, t) => X(r + t, 8), E = ([r, t, e = -r - t]) => ({ q: r, r: t, s: e });\nfunction C({ q: r, r: t, s: e }) {\n  const n = l(r), s = l(t), o = l(e);\n  if (n && s && o)\n    return { q: r, r: t, s: e };\n  if (n && s)\n    return { q: r, r: t, s: -r - t };\n  if (n && o)\n    return { q: r, r: -r - e, s: e };\n  if (s && o)\n    return { q: -t - e, r: t, s: e };\n  throw new TypeError(\n    `Can't determine three cube coordinates from less than two coordinates. Received: { q: ${r}, r: ${t}, s: ${e} }.`\n  );\n}\nvar x = /* @__PURE__ */ ((r) => (r.FLAT = \"FLAT\", r.POINTY = \"POINTY\", r))(x || {});\nfunction G(r, t) {\n  if (p(r) && r.xRadius > 0 && r.yRadius > 0)\n    return r;\n  if (p(r) && r.width > 0 && r.height > 0) {\n    const { width: e, height: n } = r;\n    return t === x.POINTY ? { xRadius: e / Math.sqrt(3), yRadius: n / 2 } : { xRadius: e / 2, yRadius: n / Math.sqrt(3) };\n  }\n  if (r > 0)\n    return { xRadius: r, yRadius: r };\n  throw new TypeError(\n    `Invalid dimensions: ${JSON.stringify(\n      r\n    )}. Dimensions must be expressed as an Ellipse ({ xRadius: number, yRadius: number }), a Rectangle ({ width: number, height: number }) or a number.`\n  );\n}\nfunction tt(r, t) {\n  if (Z(r))\n    return r;\n  if (!t)\n    throw new TypeError(\n      `Supply a bounding box ({ width: number, height: number }). Received: ${JSON.stringify(t)}`\n    );\n  if (r === \"topLeft\")\n    return { x: t.width * -0.5, y: t.height * -0.5 };\n  throw new TypeError(\n    `Invalid origin: ${JSON.stringify(\n      r\n    )}. Origin must be expressed as a Point ({ x: number, y: number }) or the string 'topLeft'.`\n  );\n}\nclass $ {\n  static get settings() {\n    const { dimensions: t, orientation: e, origin: n, offset: s } = this.prototype;\n    return { dimensions: t, orientation: e, origin: n, offset: s };\n  }\n  /**\n   * This returns a point relative to the __top left corner__ of the hex with coordinates `[0, 0]`, ignoring any `origin` you may have set.\n   *\n   * @deprecated This probably doesn't do what you expect. If you want the center coordinates of a hex, use `hex.x` and `hex.y` instead.\n   * See https://github.com/flauwekeul/honeycomb/discussions/95#discussioncomment-5158862.\n   */\n  get center() {\n    const { width: t, height: e, x: n, y: s } = this;\n    return { x: t / 2 - n, y: e / 2 - s };\n  }\n  get col() {\n    return W(this).col;\n  }\n  // todo: add to docs that this always returns corners relative to Hex(0, 0)\n  get corners() {\n    const { orientation: t, width: e, height: n, x: s, y: o } = this;\n    return t === x.POINTY ? rt(e, n, s, o) : et(e, n, s, o);\n  }\n  get dimensions() {\n    return T.dimensions;\n  }\n  get height() {\n    const {\n      orientation: t,\n      dimensions: { yRadius: e }\n    } = this;\n    return t === x.POINTY ? e * 2 : e * Math.sqrt(3);\n  }\n  get isFlat() {\n    return this.orientation === x.FLAT;\n  }\n  get isPointy() {\n    return this.orientation === x.POINTY;\n  }\n  get orientation() {\n    return T.orientation;\n  }\n  get origin() {\n    return T.origin;\n  }\n  get offset() {\n    return T.offset;\n  }\n  get row() {\n    return W(this).row;\n  }\n  get width() {\n    const {\n      orientation: t,\n      dimensions: { xRadius: e }\n    } = this;\n    return t === x.POINTY ? e * Math.sqrt(3) : e * 2;\n  }\n  get x() {\n    return J(this).x;\n  }\n  get y() {\n    return J(this).y;\n  }\n  get s() {\n    return -this.q - this.r;\n  }\n  q;\n  r;\n  constructor(t = [0, 0]) {\n    const { q: e, r: n } = N(this, t);\n    this.q = e, this.r = n;\n  }\n  clone(t = this) {\n    return new this.constructor(t);\n  }\n  equals(t) {\n    return st(this, S(t) ? U(this, t) : t);\n  }\n  toString() {\n    return `${this.constructor.name}(${this.q},${this.r})`;\n  }\n  translate(t) {\n    return ut(this, t);\n  }\n}\nconst T = {\n  dimensions: { xRadius: 1, yRadius: 1 },\n  orientation: x.POINTY,\n  origin: { x: 0, y: 0 },\n  offset: -1\n}, rt = (r, t, e, n) => [\n  { x: e + r * 0.5, y: n - t * 0.25 },\n  { x: e + r * 0.5, y: n + t * 0.25 },\n  { x: e, y: n + t * 0.5 },\n  { x: e - r * 0.5, y: n + t * 0.25 },\n  { x: e - r * 0.5, y: n - t * 0.25 },\n  { x: e, y: n - t * 0.5 }\n], et = (r, t, e, n) => [\n  { x: e + r * 0.25, y: n - t * 0.5 },\n  { x: e + r * 0.5, y: n },\n  { x: e + r * 0.25, y: n + t * 0.5 },\n  { x: e - r * 0.25, y: n + t * 0.5 },\n  { x: e - r * 0.5, y: n },\n  { x: e - r * 0.25, y: n - t * 0.5 }\n];\nfunction nt(r) {\n  const { dimensions: t, orientation: e, origin: n, offset: s } = { ...T, ...r };\n  return class extends $ {\n    get dimensions() {\n      return G(t, e);\n    }\n    get orientation() {\n      return e;\n    }\n    get origin() {\n      return tt(n, this);\n    }\n    get offset() {\n      return s;\n    }\n  };\n}\nfunction st(r, t) {\n  if (S(r) && S(t))\n    return r.col === t.col && r.row === t.row;\n  if (Object.hasOwn(r, \"col\") || Object.hasOwn(t, \"col\"))\n    throw new Error(\n      `Can't compare coordinates where one are offset coordinates. Either pass two offset coordinates or two axial/cube coordinates. Received: ${JSON.stringify(\n        r\n      )} and ${JSON.stringify(t)}`\n    );\n  const e = H(r) ? E(r) : r, n = H(t) ? E(t) : t;\n  return e.q === n.q && e.r === n.r;\n}\nconst ot = (r, t, e) => ({\n  col: r + P(e, t),\n  row: t\n}), it = (r, t, e) => ({\n  col: r,\n  row: t + P(e, r)\n}), W = ({ q: r, r: t, offset: e, isPointy: n }) => n ? ot(r, t, e) : it(r, t, e), J = ({ orientation: r, dimensions: { xRadius: t, yRadius: e }, origin: { x: n, y: s }, q: o, r: i }) => r === x.POINTY ? {\n  x: t * Math.sqrt(3) * (o + i / 2) - n,\n  y: e * 3 / 2 * i - s\n} : {\n  x: t * 3 / 2 * o - n,\n  y: e * Math.sqrt(3) * (i + o / 2) - s\n}, z = (r, t, e) => {\n  const n = r - P(e, t), s = t, o = -n - s;\n  return { q: n, r: s, s: o };\n}, j = (r, t, e) => {\n  const n = r, s = t - P(e, r), o = -n - s;\n  return { q: n, r: s, s: o };\n}, U = ({ offset: r, orientation: t }, { col: e, row: n }) => t === x.POINTY ? z(e, n, r) : j(e, n, r), L = (r) => {\n  const { q: t, r: e, s: n } = C(r);\n  let s = Math.round(t), o = Math.round(e), i = Math.round(n);\n  const c = Math.abs(t - s), u = Math.abs(e - o), h = Math.abs(n - i);\n  return c > u && c > h ? s = -o - i : u > h ? o = -s - i : i = -s - o, { q: s, r: o, s: i };\n}, ct = ({ dimensions: { xRadius: r, yRadius: t }, origin: e, orientation: n }, { x: s, y: o }) => (s += e.x, o += e.y, n === x.POINTY ? L({ q: Math.sqrt(3) * s / (3 * r) - o / (3 * t), r: 2 / 3 * (o / t) }) : L({ q: 2 / 3 * (s / r), r: Math.sqrt(3) * o / (3 * t) - s / (3 * r) }));\nfunction N(r, t) {\n  return H(t) ? E(t) : S(t) ? U(r, t) : C(t);\n}\nfunction ut(r, t) {\n  const { q: e, r: n, s } = C(r), { q: o, r: i, s: c } = C(t), u = { q: e + o, r: n + i, s: s + c };\n  return r instanceof $ ? r.clone(u) : u;\n}\nfunction R(r, t, e) {\n  const { q: n, r: s, s: o } = N(r, t), { q: i, r: c, s: u } = N(r, e);\n  return Math.max(Math.abs(n - i), Math.abs(s - c), Math.abs(o - u));\n}\nvar F = /* @__PURE__ */ ((r) => (r.CLOCKWISE = \"CLOCKWISE\", r.COUNTERCLOCKWISE = \"COUNTERCLOCKWISE\", r))(F || {}), a = /* @__PURE__ */ ((r) => (r[r.N = 0] = \"N\", r[r.NE = 1] = \"NE\", r[r.E = 2] = \"E\", r[r.SE = 3] = \"SE\", r[r.S = 4] = \"S\", r[r.SW = 5] = \"SW\", r[r.W = 6] = \"W\", r[r.NW = 7] = \"NW\", r))(a || {});\nconst ht = [\n  null,\n  // ambiguous\n  { q: 1, r: -1 },\n  // NE\n  { q: 1, r: 0 },\n  // E\n  { q: 0, r: 1 },\n  // SE\n  null,\n  // ambiguous\n  { q: -1, r: 1 },\n  // SW\n  { q: -1, r: 0 },\n  // W\n  { q: 0, r: -1 }\n  // NW\n], ft = [\n  { q: 0, r: -1 },\n  // N\n  { q: 1, r: -1 },\n  // NE\n  null,\n  // ambiguous\n  { q: 1, r: 0 },\n  // SE\n  { q: 0, r: 1 },\n  // S\n  { q: -1, r: 1 },\n  // SW\n  null,\n  // ambiguous\n  { q: -1, r: 0 }\n  // NW\n], at = ({ offset: r, q: t, r: e, col: n, row: s }, o) => {\n  if (o === a.S || o === a.N) {\n    const c = o === a.S ? s + 1 : s - 1;\n    return z(n, c, r);\n  }\n  const i = ht[o];\n  return { q: t + i.q, r: e + i.r };\n}, lt = ({ offset: r, q: t, r: e, col: n, row: s }, o) => {\n  if (o === a.E || o === a.W) {\n    const c = o === a.E ? n + 1 : n - 1;\n    return j(c, s, r);\n  }\n  const i = ft[o];\n  return { q: t + i.q, r: e + i.r };\n}, I = (r, t) => r.clone(r.isPointy ? at(r, t) : lt(r, t));\nfunction b(r) {\n  return Array.isArray(r) ? function(e, n) {\n    const s = [];\n    let o = n;\n    for (const i of r)\n      for (const c of i(e, o))\n        s.push(o = c);\n    return s;\n  } : r;\n}\nconst Tt = (...r) => (t) => r.map(t);\nfunction v(r) {\n  return gt(r) ? xt(r) : dt(r);\n}\nfunction gt(r) {\n  return r.direction in a;\n}\nfunction xt({ start: r, direction: t, length: e }) {\n  return function(s, o) {\n    const i = [];\n    let u = s(r ?? o);\n    !r && o && (u = I(u, t));\n    for (let h = 0; h < e; h++)\n      i.push(u), u = I(u, t);\n    return i;\n  };\n}\nfunction dt({ start: r, stop: t }) {\n  return function(n, s) {\n    const o = [], i = n(r ?? s), c = B(i), u = B(N(i, t)), h = mt(c, u), f = R(i, i, t), y = 1 / Math.max(f, 1);\n    let m = !r && s ? 1 : 0;\n    for (m; m <= f; m++) {\n      const O = L(h(y * m));\n      o.push(n(O));\n    }\n    return o;\n  };\n}\nfunction B({ q: r, r: t, s: e }) {\n  return { q: r + 1e-6, r: t + 1e-6, s: e + -2e-6 };\n}\nfunction mt(r, t) {\n  return (e) => {\n    const n = r.q * (1 - e) + t.q * e, s = r.r * (1 - e) + t.r * e;\n    return { q: n, r: s };\n  };\n}\nconst pt = (r) => (t, e) => [I(t(e), r)];\nfunction _(r, t, { includeSource: e = !0 } = {}) {\n  return function(s, o) {\n    const i = [];\n    for (const c of b(r)(s, o)) {\n      e && i.push(c);\n      for (const u of b(t)(s, c))\n        i.push(u);\n    }\n    return i;\n  };\n}\nfunction St(r, t) {\n  return function(n, s) {\n    const {\n      width: o,\n      height: i,\n      start: c,\n      direction: u = a.E\n    } = t ? qt(r, t, n()) : r, h = c ?? s ?? [0, 0], f = _(\n      v({ start: h, direction: D(u, 2), length: i }),\n      v({ direction: u, length: o - 1 })\n    )(n, h);\n    return !c && s ? f.slice(1) : f;\n  };\n}\nfunction qt(r, t, { isPointy: e, offset: n }) {\n  const { col: s, row: o } = K(r, e, n), { col: i, row: c } = K(t, e, n), u = s < i ? \"A\" : \"B\", h = o < c ? \"A\" : \"B\", f = u + h, { swapWidthHeight: y, direction: m } = yt[f], O = Math.abs(s - i) + 1, g = Math.abs(o - c) + 1;\n  return {\n    width: y ? g : O,\n    height: y ? O : g,\n    start: r,\n    direction: m\n  };\n}\nfunction K(r, t, e) {\n  if (S(r))\n    return r;\n  const { q: n, r: s } = H(r) ? E(r) : C(r);\n  return W({ q: n, r: s, isPointy: t, offset: e });\n}\nconst yt = {\n  AA: {\n    swapWidthHeight: !1,\n    direction: a.E\n  },\n  AB: {\n    swapWidthHeight: !0,\n    direction: a.N\n  },\n  BA: {\n    swapWidthHeight: !0,\n    direction: a.S\n  },\n  BB: {\n    swapWidthHeight: !1,\n    direction: a.W\n  }\n};\nfunction Ct(r, t) {\n  return b(Array.from({ length: r }, () => b(t)));\n}\nfunction Ot(r) {\n  const { center: t, rotation: e = F.CLOCKWISE } = r;\n  return function(s, o) {\n    const i = e.toUpperCase(), c = [];\n    let { radius: u } = r;\n    const h = l(u);\n    let f;\n    h ? f = s(t).translate({ q: u, s: -u }) : (f = s(r.start ?? o), u = R(f, t, f));\n    const { q: y, r: m, s: O } = N(f, t);\n    let g = s({ q: y, r: m - u, s: O + u });\n    if (i === F.CLOCKWISE)\n      for (let d = 0; d < 6; d++)\n        for (let w = 0; w < u; w++) {\n          const { q: A, r: M } = Q[d];\n          g = s({ q: g.q + A, r: g.r + M }), c.push(g);\n        }\n    else\n      for (let d = 5; d >= 0; d--)\n        for (let w = 0; w < u; w++) {\n          const { q: A, r: M } = Q[d];\n          g = s({ q: g.q - A, r: g.r - M }), c.push(g);\n        }\n    const k = h ? !1 : !r.start && o, Y = c.findIndex((d) => d.equals(f));\n    return c.slice(Y + (k ? 1 : 0)).concat(c.slice(0, Y));\n  };\n}\nconst Q = [\n  { q: 1, r: 0 },\n  { q: 0, r: 1 },\n  { q: -1, r: 1 },\n  { q: -1, r: 0 },\n  { q: 0, r: -1 },\n  { q: 1, r: -1 }\n];\nfunction Nt({ radius: r, start: t, rotation: e }) {\n  return function(s, o) {\n    const i = t ?? o ?? [0, 0], c = !t && o ? r : r + 1;\n    return _(v({ start: t, direction: a.N, length: c }), Ot({ center: i, rotation: e }))(s, o);\n  };\n}\nclass q {\n  static fromIterable(t) {\n    const e = t[Symbol.iterator]().next().value;\n    if (!e)\n      throw new TypeError(`Can't create grid from empty iterable: ${JSON.stringify(t)}`);\n    return new q(e.constructor, t);\n  }\n  static fromJSON({ hexSettings: t, coordinates: e }, n) {\n    if (n) {\n      const o = e.map(n), i = o.length > 0 ? o[0].constructor : n({ q: 0, r: 0 }, 0, [{ q: 0, r: 0 }]).constructor;\n      return new q(i, o);\n    }\n    const s = nt(t);\n    return new q(\n      s,\n      e.map((o) => new s(o))\n    );\n  }\n  get size() {\n    return this.#r.size;\n  }\n  get pixelWidth() {\n    if (this.size === 0)\n      return 0;\n    const { isPointy: t, width: e } = this.hexPrototype, n = this.toArray(), {\n      0: s,\n      length: o,\n      [o - 1]: i\n    } = t ? n.sort((c, u) => u.s - c.s || c.q - u.q) : n.sort((c, u) => c.q - u.q);\n    return i.x - s.x + e;\n  }\n  get pixelHeight() {\n    if (this.size === 0)\n      return 0;\n    const { isPointy: t, height: e } = this.hexPrototype, n = this.toArray(), {\n      0: s,\n      length: o,\n      [o - 1]: i\n    } = t ? n.sort((c, u) => c.r - u.r) : n.sort((c, u) => u.s - c.s || c.r - u.r);\n    return i.y - s.y + e;\n  }\n  [Symbol.iterator]() {\n    return this.#r.values();\n  }\n  get hexPrototype() {\n    return this.#t.prototype;\n  }\n  #t;\n  #r = /* @__PURE__ */ new Map();\n  constructor(t, e = []) {\n    if (t instanceof q) {\n      this.#t = t.#t, this.setHexes(t);\n      return;\n    }\n    this.#t = t, this.setHexes(this.#n(e));\n  }\n  createHex(t) {\n    return new this.#t(t);\n  }\n  getHex(t) {\n    const e = this.createHex(t);\n    return this.#r.get(e.toString());\n  }\n  hasHex(t) {\n    return this.#r.has(t.toString());\n  }\n  setHexes(t) {\n    for (const e of t) {\n      const n = e instanceof $ ? e : new this.#t(e);\n      this.#e(n);\n    }\n    return this;\n  }\n  filter(t) {\n    const e = new q(this.#t);\n    for (const n of this)\n      t(n) && e.#e(n);\n    return e;\n  }\n  map(t) {\n    const e = new q(this.#t);\n    for (const n of this)\n      e.#e(t(n));\n    return e;\n  }\n  traverse(t, { bail: e = !1 } = {}) {\n    const n = new q(this.#t);\n    for (const s of this.#n(t)) {\n      const o = this.getHex(s);\n      if (o)\n        n.#e(o);\n      else if (e)\n        return n;\n    }\n    return n;\n  }\n  forEach(t) {\n    for (const e of this)\n      t(e);\n    return this;\n  }\n  reduce(t, e) {\n    if (e === void 0) {\n      let s, o, i;\n      for (const c of this)\n        o = i, i = c, o && (s = t(o, i));\n      return s;\n    }\n    let n = e;\n    for (const s of this)\n      n = t(n, s);\n    return n;\n  }\n  toArray() {\n    return Array.from(this);\n  }\n  // todo: add to docs that hexSettings don't include any custom properties\n  toJSON() {\n    const { dimensions: t, orientation: e, origin: n, offset: s } = this.hexPrototype;\n    return { hexSettings: { dimensions: t, orientation: e, origin: n, offset: s }, coordinates: this.toArray() };\n  }\n  toString() {\n    return `${this.constructor.name}(${this.size})`;\n  }\n  pointToHex(t, { allowOutside: e = !0 } = {}) {\n    const n = ct(this.hexPrototype, t), s = this.getHex(n);\n    return e ? s ?? this.createHex(n) : s;\n  }\n  distance(t, e, { allowOutside: n = !0 } = {}) {\n    if (n)\n      return R(this.hexPrototype, t, e);\n    const s = this.getHex(t), o = this.getHex(e);\n    if (!(!s || !o))\n      return R(this.hexPrototype, s, o);\n  }\n  neighborOf(t, e, { allowOutside: n = !0 } = {}) {\n    const s = I(this.createHex(t), e), o = this.getHex(s);\n    return n ? o ?? s : o;\n  }\n  #e(t) {\n    this.#r.set(t.toString(), t);\n  }\n  #n(t) {\n    return this.#s(t) ? this.#o(t) : Array.isArray(t) && this.#s(t[0]) ? this.#o(b(t)) : t;\n  }\n  #s(t) {\n    return V(t);\n  }\n  #o(t) {\n    return t(this.createHex.bind(this));\n  }\n}\nexport {\n  a as Direction,\n  q as Grid,\n  $ as Hex,\n  x as Orientation,\n  F as Rotation,\n  C as completeCube,\n  b as concat,\n  G as createHexDimensions,\n  tt as createHexOrigin,\n  T as defaultHexSettings,\n  nt as defineHex,\n  R as distance,\n  st as equals,\n  Tt as fromCoordinates,\n  W as hexToOffset,\n  J as hexToPoint,\n  wt as isAxial,\n  S as isOffset,\n  Z as isPoint,\n  H as isTuple,\n  v as line,\n  pt as move,\n  I as neighborOf,\n  P as offsetFromZero,\n  U as offsetToCube,\n  j as offsetToCubeFlat,\n  z as offsetToCubePointy,\n  ct as pointToCube,\n  St as rectangle,\n  Ct as repeat,\n  _ as repeatWith,\n  Ot as ring,\n  L as round,\n  Nt as spiral,\n  N as toCube,\n  ut as translate,\n  E as tupleToCube\n};\n"],
  "mappings": "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",
  "names": []
}
